(() => {
  const _ = {
      Big: {
        height: 6,
        letters:
          "\n\n    /\\\n   /  \\\n  / /\\ \\\n / ____ \\\n/_/    \\_\\\n ____\n|  _ \\\n| |_) |\n|  _ <\n| |_) |\n|____/\n  _____\n / ____|\n| |\n| |\n| |____\n \\_____|\n _____\n|  __ \\\n| |  | |\n| |  | |\n| |__| |\n|_____/\n ______\n|  ____|\n| |__\n|  __|\n| |____\n|______|\n ______\n|  ____|\n| |__\n|  __|\n| |\n|_|\n  _____\n / ____|\n| |  __\n| | |_ |\n| |__| |\n \\_____|\n _    _\n| |  | |\n| |__| |\n|  __  |\n| |  | |\n|_|  |_|\n _____\n|_   _|\n  | |\n  | |\n _| |_\n|_____|\n      _\n     | |\n     | |\n _   | |\n| |__| |\n \\____/\n _  __\n| |/ /\n| ' /\n|  <\n| . \\\n|_|\\_\\\n _\n| |\n| |\n| |\n| |____\n|______|\n __  __\n|  \\/  |\n| \\  / |\n| |\\/| |\n| |  | |\n|_|  |_|\n _   _\n| \\ | |\n|  \\| |\n| . ` |\n| |\\  |\n|_| \\_|\n  ____\n / __ \\\n| |  | |\n| |  | |\n| |__| |\n \\____/\n _____\n|  __ \\\n| |__) |\n|  ___/\n| |\n|_|\n  ____\n / __ \\\n| |  | |\n| |  | |\n| |__| |\n \\___\\_\\\n _____\n|  __ \\\n| |__) |\n|  _  /\n| | \\ \\\n|_|  \\_\\\n  _____\n / ____|\n| (___\n \\___ \\\n ____) |\n|_____/\n _______\n|__   __|\n   | |\n   | |\n   | |\n   |_|\n _    _\n| |  | |\n| |  | |\n| |  | |\n| |__| |\n \\____/\n__      __\n\\ \\    / /\n \\ \\  / /\n  \\ \\/ /\n   \\  /\n    \\/\n__          __\n\\ \\        / /\n \\ \\  /\\  / /\n  \\ \\/  \\/ /\n   \\  /\\  /\n    \\/  \\/\n__   __\n\\ \\ / /\n \\ V /\n  > <\n / . \\\n/_/ \\_\\\n__     __\n\\ \\   / /\n \\ \\_/ /\n  \\   /\n   | |\n   |_|\n ______\n|___  /\n   / /\n  / /\n / /__\n/_____|\n",
        characters:
          "\n _\n| |\n| |\n| |\n|_|\n(_)\n ___\n|__ \\\n   ) |\n  / /\n |_|\n (_)\n\n\n\n _\n( )\n|/\n _ _\n( | )\n V V\n\n\n\n _\n( )\n|/\n\n\n\n\n _\n(_)\n _\n(_)\n\n\n _\n(_)\n _\n(_)\n\n _\n( )\n|/\n   _  _\n _| || |_\n|_  __  _|\n _| || |_\n|_  __  _|\n  |_||_|\n\n  ___\n ( _ )\n / _ \\/\\\n| (_>  <\n \\___/\\/\n    _\n /\\| |/\\\n \\ ` ' /\n|_     _|\n / , . \\\n \\/|_|\\/\n __\n/ /\n| |\n| |\n| |\n\\_\\\n __\n\\ \\\n | |\n | |\n | |\n /_/\n\n\n ______\n|______|\n\n\n\n\n\n\n ______\n|______|\n   __\n  / /\n / /\n< <\n\\ \\\n \\_\\\n__\n\\ \\\n \\ \\\n  > >\n / /\n/_/\n     __\n    / /\n   / /\n  / /\n / /\n/_/\n"
      }
    },
    n = {
      letters: [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z"
      ],
      characters: [
        " ",
        ".",
        ",",
        "!",
        "?",
        ":",
        ";",
        '"',
        "'",
        "#",
        "&",
        "*",
        "(",
        ")",
        "-",
        "_",
        "<",
        ">",
        "/"
      ]
    };
  !(function (t, e) {
    const r = _.Big,
      { height: s, letters: o } = r,
      l = o.split("\n").slice(1),
      c = new Map();
    for (let _ = 0; _ < n.letters.length; _++) {
      const t = n.letters[_],
        e = [];
      for (let n = 0; n < s; n++) e.push(l[_ * s + n]);
      c.set(t, e);
    }
    for (let _ = 0; _ < n.characters.length; _++) {
      const t = n.characters[_],
        e = [];
      for (let t = 0; t < s; t++) e.push(l[(n.letters.length + _) * s + t]);
      c.set(t, e);
    }
    const h = Array.from({ length: s }, () => "");
    for (const _ of "Hello world!") {
      const n = _.toLowerCase(),
        t = c.get(n);
      if (t) for (let _ = 0; _ < s; _++) h[_] += t[_] + " ";
      else for (let _ = 0; _ < s; _++) h[_] += " ".repeat(6);
    }
    h.join("\n");
  })(),
    (window.AsciiTextArt = {});
})();
